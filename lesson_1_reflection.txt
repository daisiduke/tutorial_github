How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    No annoying searching through the whole file. The moment you're familiar with the style of output it is really easy to find the typo

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Not only correcting typos and other wrong extensions but having access to older version would also be helpful working on old scripts. To figur out what I change last. 

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Regarding me I know that I probably do to little commits, cause I'm often sucked in for hours and won't find the time to commit. Anyway not being able to commit manually is not an option. 

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    GDs is mostly for unrelated files, while programming is intrinsically capable of relating a lot of files. 

How can you use the commands git log and git diff to view the history of files?

    git log gives information on all files in a Repository, e.g. showing comments and date.
    git diff compars the respective files line by line and shows the differences made

How might using version control make you more confident to make changes that
could break something?

    Even if I mess up the big time I'm always able to reset my code. So this encourages me to just go ahead and try things. 

Now that you have your workspace set up, what do you want to try using Git for?

    Assembling all my scripts I wrote for my thesis
